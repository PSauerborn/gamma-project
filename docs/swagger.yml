openapi: 3.0.0
info:
  title: Micro-service Mesh
  description: Set of micro-services to create and manage jobs
  version: 0.1.0

tags:
  - name: Jobs API
    description: micro-services to create and manage jobs
  - name: Filestore
    description: micro-service to store and manage files
  - name: Roles API
    description: micro-services to assign and manage roles

paths:
  /jobs/health_check:
    get:
      summary: Returns health check response from service
      tags:
      - Jobs API
      parameters:
        - in: header
          name: X-Authenticated-Userid
          schema:
            type: string
          description: uid of user
          required: true
      responses:
        200:
          description: JSON response containing success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        403:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        500:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /jobs/list/all:
    get:
      summary: Returns all jobs in JSON format
      tags:
      - Jobs API
      parameters:
        - in: header
          name: X-Authenticated-Userid
          schema:
            type: string
          description: uid of user
          required: true
      responses:
        200:
          description: JSON response containing jobs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
        403:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        500:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /jobs/list:
    get:
      summary: Returns all jobs in JSON format for user
      tags:
      - Jobs API
      parameters:
        - in: header
          name: X-Authenticated-Userid
          schema:
            type: string
          description: uid of user
          required: true
      responses:
        200:
          description: JSON response containing jobs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
        403:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        500:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /jobs/new:
    post:
      summary: Creates a new job from JSON
      tags:
      - Jobs API
      parameters:
        - in: header
          name: X-Authenticated-Userid
          schema:
            type: string
          description: uid of user
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewJobRequest'
      responses:
        200:
          description: JSON response containing success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCreatedResponse'
        400:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestBody'
        403:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        500:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /jobs/{jobId}:
    get:
      summary: Returns job details for a specified job
      tags:
      - Jobs API
      parameters:
        - in: path
          name: jobId
          schema:
            type: string
            format: uuid
          description: UUID of job
          required: true
        - in: header
          name: X-Authenticated-Userid
          schema:
            type: string
          description: uid of user
          required: true
      responses:
        200:
          description: JSON response containing job details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDetailsResponse'
        403:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        404:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundResponse'
        500:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      summary: Deletes job with specified ID
      tags:
      - Jobs API
      parameters:
        - in: path
          name: jobId
          schema:
            type: string
            format: uuid
          description: UUID of job
          required: true
        - in: header
          name: X-Authenticated-Userid
          schema:
            type: string
          description: uid of user
          required: true
      responses:
        200:
          description: JSON response containing job details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDeletedResponse'
        403:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        404:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundResponse'
        500:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /jobs/{jobId}/attachments:
    post:
      summary: Upload attachment for specified job
      tags:
      - Jobs API
      parameters:
        - in: header
          name: X-Authenticated-Userid
          schema:
            type: string
          description: uid of user
          required: true
        - in: path
          name: jobId
          schema:
            type: string
          description: UUID of job
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                attachment:
                  type: string
                  format: binary
      responses:
        200:
          description: JSON response containing success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadedResponse'
        400:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestBody'
        403:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        404:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundResponse'
        500:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /jobs/{jobId}/state:
    patch:
      summary: Updates state of a job
      tags:
      - Jobs API
      parameters:
        - in: header
          name: X-Authenticated-Userid
          schema:
            type: string
          description: uid of user
          required: true
        - in: path
          name: jobId
          schema:
            type: string
          description: UUID of job
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: integer
                  example: 2
      responses:
        200:
          description: JSON response containing success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateModifiedResponse'
        400:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestBody'
        403:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        404:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundResponse'
        500:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /jobs/{jobId}/assign:
    patch:
      summary: Assigns job to a specific user
      tags:
      - Jobs API
      parameters:
        - in: header
          name: X-Authenticated-Userid
          schema:
            type: string
          description: uid of user
          required: true
        - in: path
          name: jobId
          schema:
            type: string
          description: UUID of job
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string
                  example: example-user
      responses:
        200:
          description: JSON response containing success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAssignedResponse'
        400:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestBody'
        403:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        404:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotFoundResponse'
        500:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /roles/health_check:
    get:
      summary: Returns health check response for service
      tags:
      - Roles API
      parameters:
        - in: header
          name: X-Authenticated-Userid
          schema:
            type: string
          description: uid of user
          required: true
      responses:
        200:
          description: JSON response containing success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        403:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        500:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /roles/{uid}:
    get:
      summary: Returns role of specified user
      tags:
      - Roles API
      parameters:
        - in: header
          name: X-Authenticated-Userid
          schema:
            type: string
          description: uid of user
          required: true
        - in: path
          name: uid
          schema:
            type: string
          description: uid of user to retrieve roles for
          required: true
      responses:
        200:
          description: JSON response containing assigned user role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
        403:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        500:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /roles/set:
    patch:
      summary: Sets roles for a given user
      tags:
      - Roles API
      parameters:
        - in: header
          name: X-Authenticated-Userid
          schema:
            type: string
          description: uid of user
          required: true
      responses:
        200:
          description: JSON response containing success message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModifiedResponse'
        400:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestBody'
        403:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
        500:
          description: JSON response containing error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

components:
  schemas:
    HealthCheck:
      properties:
        http_code:
          type: integer
          example: 200
        message:
          type: string
          example: Service running
    BadRequest:
      properties:
        http_code:
          type: integer
          example: 400
        message:
          type: string
          example: Bad request
    InvalidRequestBody:
      properties:
        http_code:
          type: integer
          example: 400
        message:
          type: string
          example: Invalid request body
    Unauthorized:
      properties:
        http_code:
          type: integer
          example: 401
        message:
          type: string
          example: Unauthorized
    Forbidden:
      properties:
        http_code:
          type: integer
          example: 403
        message:
          type: string
          example: Forbidden
    InternalServerError:
      properties:
        http_code:
          type: integer
          example: 500
        message:
          type: string
          example: Internal server error

    JobMeta:
      properties:
        creator:
          type: string
          example: example-user
        attachments:
          type: array
          items:
            type: string
            format: uuid
            example: 3461b524-67cd-4c79-a0ac-73c6d8aada98

    Job:
      properties:
        job_id:
          type: string
          format: uuid
          example: eb1fc12c-c268-4307-b6e3-8d74d4eb7f6d
        created:
          type: string
          format: timestamp
          example: '2021-01-01T00:00:00Z'
        state:
          type: integer
          example: 1
        due:
          type: string
          format: timestamp
          example: '2021-01-05T00:00:00Z'
        name:
          type: string
          example: Example Job
        assigned:
          type: boolean
          example: false
        meta:
          type: object
          $ref: '#/components/schemas/JobMeta'

    ListJobsResponse:
      properties:
        http_code:
          type: integer
          example: 200
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Job'

    JobNotFoundResponse:
      properties:
        http_code:
          type: integer
          example: 404
        message:
          type: string
          example: Cannot find job with specified ID

    JobDeletedResponse:
      properties:
        http_code:
          type: integer
          example: 200
        message:
          type: string
          example: Successfully deleted job

    JobDetailsResponse:
      properties:
        http_code:
          type: integer
          example: 200
        job:
          type: object
          $ref: '#/components/schemas/Job'

    NewJobRequest:
      properties:
        name:
          type: string
          example: Example Job
        due:
          type: string
          format: timestamp
          example: '2021-01-05T00:00:00Z'

    JobCreatedResponse:
      properties:
        http_code:
          type: integer
          example: 201
        message:
          type: string
          example: Successfully created job
        job_id:
          type: string
          format: uuid
          example: 243ff4ae-6032-4d8c-86a7-9f715bf867cd

    FileUploadedResponse:
      properties:
        http_code:
          type: integer
          example: 201
        message:
          type: string
          example: Successfully uploaded attachment
        file_id:
          type: string
          format: uuid
          example: 243ff4ae-6032-4d8c-86a7-9f715bf867cd

    StateModifiedResponse:
      properties:
        http_code:
          type: integer
          example: 200
        message:
          type: string
          example: Successfully updated job

    JobAssignedResponse:
      properties:
        http_code:
          type: integer
          example: 200
        message:
          type: string
          example: Successfully assigned job

    RoleResponse:
      properties:
        http_code:
          type: integer
          example: 200
        role:
          type: string
          example: Standard User

    RoleModifiedResponse:
      properties:
        http_code:
          type: integer
          example: 200
        message:
          type: string
          example: Successfully modified user roles

